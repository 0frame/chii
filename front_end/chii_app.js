import './shell.js';
import { startApplication } from './RuntimeInstantiator.js';

Root.allDescriptors.push(
  ...[
    {
      name: 'sources',
      extensions: [
        {
          type: '@UI.ContextMenu.Provider',
          contextTypes: [
            'Workspace.UISourceCode',
            'Workspace.UILocation',
            'SDK.RemoteObject',
            'SDK.NetworkRequest',
            'Sources.UISourceCodeFrame',
          ],
          className: 'Sources.SourcesPanel',
        },
        {
          type: 'action',
          category: 'Debugger',
          actionId: 'debugger.toggle-pause',
          iconClass: 'largeicon-pause',
          toggleable: true,
          toggledIconClass: 'largeicon-resume',
          className: 'Sources.SourcesPanel.RevealingActionDelegate',
          contextTypes: ['Sources.SourcesView', 'UI.ShortcutRegistry.ForwardedShortcut'],
          options: [
            {
              value: true,
              title: 'Pause script execution',
            },
            {
              value: false,
              title: 'Resume script execution',
            },
          ],
          bindings: [
            {
              shortcut: 'F8',
            },
            {
              platform: 'windows,linux',
              shortcut: 'Ctrl+\\',
            },
            {
              platform: 'mac',
              shortcut: 'Meta+\\',
            },
          ],
        },
        {
          type: 'action',
          category: 'Debugger',
          actionId: 'debugger.step-over',
          className: 'Sources.SourcesPanel.DebuggingActionDelegate',
          title: 'Step over next function call',
          iconClass: 'largeicon-step-over',
          contextTypes: ['SDK.DebuggerPausedDetails'],
          bindings: [
            {
              shortcut: 'F10',
            },
            {
              platform: 'windows,linux',
              shortcut: "Ctrl+'",
            },
            {
              platform: 'mac',
              shortcut: "Meta+'",
            },
          ],
        },
        {
          type: 'action',
          category: 'Debugger',
          actionId: 'debugger.step-into',
          className: 'Sources.SourcesPanel.DebuggingActionDelegate',
          title: 'Step into next function call',
          iconClass: 'largeicon-step-into',
          contextTypes: ['SDK.DebuggerPausedDetails'],
          bindings: [
            {
              shortcut: 'F11',
            },
            {
              platform: 'windows,linux',
              shortcut: 'Ctrl+;',
            },
            {
              platform: 'mac',
              shortcut: 'Meta+;',
            },
          ],
        },
        {
          type: 'action',
          category: 'Debugger',
          actionId: 'debugger.step',
          className: 'Sources.SourcesPanel.DebuggingActionDelegate',
          title: 'Step',
          iconClass: 'largeicon-step',
          contextTypes: ['SDK.DebuggerPausedDetails'],
          bindings: [
            {
              shortcut: 'F9',
            },
          ],
        },
        {
          type: 'action',
          category: 'Debugger',
          actionId: 'debugger.step-out',
          className: 'Sources.SourcesPanel.DebuggingActionDelegate',
          title: 'Step out of current function',
          iconClass: 'largeicon-step-out',
          contextTypes: ['SDK.DebuggerPausedDetails'],
          bindings: [
            {
              shortcut: 'Shift+F11',
            },
            {
              platform: 'windows,linux',
              shortcut: 'Shift+Ctrl+;',
            },
            {
              platform: 'mac',
              shortcut: 'Shift+Meta+;',
            },
          ],
        },
        {
          type: 'action',
          actionId: 'debugger.run-snippet',
          category: 'Debugger',
          className: 'Sources.SourcesPanel.DebuggingActionDelegate',
          title: 'Run snippet',
          iconClass: 'largeicon-play',
          contextTypes: ['Sources.SourcesView'],
          bindings: [
            {
              platform: 'windows,linux',
              shortcut: 'Ctrl+Enter',
            },
            {
              platform: 'mac',
              shortcut: 'Meta+Enter',
            },
          ],
        },
        {
          type: 'action',
          category: 'Debugger',
          actionId: 'debugger.toggle-breakpoints-active',
          iconClass: 'largeicon-deactivate-breakpoints',
          toggleable: true,
          toggledIconClass: 'largeicon-activate-breakpoints',
          className: 'Sources.SourcesPanel.DebuggingActionDelegate',
          contextTypes: ['Sources.SourcesView'],
          options: [
            {
              value: true,
              title: 'Deactivate breakpoints',
            },
            {
              value: false,
              title: 'Activate breakpoints',
            },
          ],
          bindings: [
            {
              platform: 'windows,linux',
              shortcut: 'Ctrl+F8',
            },
            {
              platform: 'mac',
              shortcut: 'Meta+F8',
            },
          ],
        },
        {
          type: 'action',
          actionId: 'sources.add-to-watch',
          className: 'Sources.WatchExpressionsSidebarPane',
          category: 'Debugger',
          title: 'Add selected text to watches',
          contextTypes: ['Sources.UISourceCodeFrame'],
          bindings: [
            {
              shortcut: 'Ctrl+Shift+A',
            },
          ],
        },
        {
          type: '@UI.ContextMenu.Provider',
          actionId: 'sources.add-to-watch',
          className: 'Sources.WatchExpressionsSidebarPane',
          title: 'Add to watch',
          contextTypes: ['ObjectUI.ObjectPropertyTreeElement'],
        },
        {
          type: '@UI.ContextMenu.Provider',
          contextTypes: ['TextEditor.CodeMirrorTextEditor'],
          className: 'Sources.WatchExpressionsSidebarPane',
        },
        {
          type: '@UI.ContextMenu.Provider',
          contextTypes: ['Workspace.UISourceCode'],
          className: 'Sources.GutterDiffPlugin.ContextMenuProvider',
        },
        {
          type: 'action',
          actionId: 'debugger.evaluate-selection',
          category: 'Debugger',
          className: 'Sources.SourcesPanel.DebuggingActionDelegate',
          title: 'Evaluate selected text in console',
          contextTypes: ['Sources.UISourceCodeFrame'],
          bindings: [
            {
              shortcut: 'Ctrl+Shift+E',
            },
          ],
        },
        {
          type: '@QuickOpen.FilteredListWidget.Provider',
          title: 'Open file',
          prefix: '',
          className: 'Sources.OpenFileQuickOpen',
        },
        {
          type: '@QuickOpen.FilteredListWidget.Provider',
          title: 'Go to line',
          prefix: ':',
          className: 'Sources.GoToLineQuickOpen',
        },
        {
          type: '@QuickOpen.FilteredListWidget.Provider',
          title: 'Go to symbol',
          prefix: '@',
          className: 'Sources.OutlineQuickOpen',
        },
        {
          type: 'context-menu-item',
          location: 'navigatorMenu/default',
          actionId: 'quickOpen.show',
        },
        {
          type: '@Common.Revealer',
          contextTypes: ['Workspace.UILocation'],
          destination: 'Sources panel',
          className: 'Sources.SourcesPanel.UILocationRevealer',
        },
        {
          type: '@Common.Revealer',
          contextTypes: ['SDK.DebuggerModel.Location'],
          destination: 'Sources panel',
          className: 'Sources.SourcesPanel.DebuggerLocationRevealer',
        },
        {
          type: '@Common.Revealer',
          contextTypes: ['Workspace.UISourceCode'],
          destination: 'Sources panel',
          className: 'Sources.SourcesPanel.UISourceCodeRevealer',
        },
        {
          type: '@Common.Revealer',
          contextTypes: ['SDK.DebuggerPausedDetails'],
          destination: 'Sources panel',
          className: 'Sources.SourcesPanel.DebuggerPausedDetailsRevealer',
        },
        {
          type: '@Sources.SourcesView.EditorAction',
          className: 'Sources.InplaceFormatterEditorAction',
        },
        {
          type: '@Sources.SourcesView.EditorAction',
          className: 'Sources.ScriptFormatterEditorAction',
        },
        {
          type: 'view',
          location: 'navigator-view',
          id: 'navigator-files',
          title: 'Filesystem',
          order: 3,
          persistence: 'permanent',
          className: 'Sources.FilesNavigatorView',
        },
        {
          type: 'view',
          location: 'navigator-view',
          id: 'navigator-snippets',
          title: 'Snippets',
          order: 6,
          persistence: 'permanent',
          className: 'Sources.SnippetsNavigatorView',
        },
        {
          type: '@Sources.NavigatorView',
          viewId: 'navigator-network',
          className: 'Sources.NetworkNavigatorView',
        },
        {
          type: '@Sources.NavigatorView',
          viewId: 'navigator-files',
          className: 'Sources.FilesNavigatorView',
        },
        {
          type: '@Sources.NavigatorView',
          viewId: 'navigator-snippets',
          className: 'Sources.SnippetsNavigatorView',
        },
        {
          type: 'action',
          actionId: 'sources.switch-file',
          category: 'Sources',
          title: 'Switch file',
          className: 'Sources.SourcesView.SwitchFileActionDelegate',
          contextTypes: ['Sources.SourcesView'],
          bindings: [
            {
              shortcut: 'Alt+O',
            },
          ],
        },
        {
          type: 'action',
          actionId: 'sources.rename',
          category: 'Sources',
          title: 'Rename',
          bindings: [
            {
              platform: 'windows,linux',
              shortcut: 'F2',
            },
            {
              platform: 'mac',
              shortcut: 'Enter',
            },
          ],
        },
        {
          type: 'setting',
          settingName: 'navigatorGroupByFolder',
          settingType: 'boolean',
          defaultValue: 'true',
        },
        {
          type: 'setting',
          category: 'Sources',
          title: 'Search in anonymous and content scripts',
          settingName: 'searchInAnonymousAndContentScripts',
          settingType: 'boolean',
          defaultValue: false,
          options: [
            {
              value: true,
              title: 'Search in anonymous and content scripts',
            },
            {
              value: false,
              title: 'Do not search in anonymous and content scripts',
            },
          ],
        },
        {
          type: 'setting',
          category: 'Sources',
          title: 'Automatically reveal files in sidebar',
          settingName: 'autoRevealInNavigator',
          settingType: 'boolean',
          defaultValue: false,
          options: [
            {
              value: true,
              title: 'Automatically reveal files in sidebar',
            },
            {
              value: false,
              title: 'Do not automatically reveal files in sidebar',
            },
          ],
        },
        {
          type: 'setting',
          category: 'Sources',
          title: 'Enable JavaScript source maps',
          settingName: 'jsSourceMapsEnabled',
          settingType: 'boolean',
          defaultValue: true,
          options: [
            {
              value: true,
              title: 'Enable JavaScript source maps',
            },
            {
              value: false,
              title: 'Disable JavaScript source maps',
            },
          ],
        },
        {
          type: 'setting',
          category: 'Sources',
          title: 'Enable tab moves focus',
          settingName: 'textEditorTabMovesFocus',
          settingType: 'boolean',
          defaultValue: false,
          options: [
            {
              value: true,
              title: 'Enable tab moves focus',
            },
            {
              value: false,
              title: 'Disable tab moves focus',
            },
          ],
        },
        {
          type: 'setting',
          category: 'Sources',
          title: 'Detect indentation',
          settingName: 'textEditorAutoDetectIndent',
          settingType: 'boolean',
          defaultValue: true,
          options: [
            {
              value: true,
              title: 'Detect indentation',
            },
            {
              value: false,
              title: 'Do not detect indentation',
            },
          ],
        },
        {
          type: 'setting',
          category: 'Sources',
          title: 'Autocompletion',
          settingName: 'textEditorAutocompletion',
          settingType: 'boolean',
          defaultValue: true,
          options: [
            {
              value: true,
              title: 'Enable autocompletion',
            },
            {
              value: false,
              title: 'Disable autocompletion',
            },
          ],
        },
        {
          type: 'setting',
          category: 'Sources',
          title: 'Bracket matching',
          settingName: 'textEditorBracketMatching',
          settingType: 'boolean',
          defaultValue: true,
          options: [
            {
              value: true,
              title: 'Enable bracket matching',
            },
            {
              value: false,
              title: 'Disable bracket matching',
            },
          ],
        },
        {
          type: 'setting',
          category: 'Sources',
          title: 'Code folding',
          settingName: 'textEditorCodeFolding',
          settingType: 'boolean',
          defaultValue: false,
          options: [
            {
              value: true,
              title: 'Enable code folding',
            },
            {
              value: false,
              title: 'Disable code folding',
            },
          ],
        },
        {
          type: 'setting',
          category: 'Sources',
          title: 'Show whitespace characters:',
          settingName: 'showWhitespacesInEditor',
          settingType: 'enum',
          defaultValue: 'original',
          options: [
            {
              title: 'Do not show whitespace characters',
              text: 'None',
              value: 'none',
            },
            {
              title: 'Show all whitespace characters',
              text: 'All',
              value: 'all',
            },
            {
              title: 'Show trailing whitespace characters',
              text: 'Trailing',
              value: 'trailing',
            },
          ],
        },
        {
          type: 'setting',
          category: 'Sources',
          title: 'Display variable values inline while debugging',
          settingName: 'inlineVariableValues',
          settingType: 'boolean',
          defaultValue: true,
          options: [
            {
              value: true,
              title: 'Display variable values inline while debugging',
            },
            {
              value: false,
              title: 'Do not display variable values inline while debugging',
            },
          ],
        },
        {
          type: 'setting',
          category: 'Sources',
          title: 'Enable CSS source maps',
          settingName: 'cssSourceMapsEnabled',
          settingType: 'boolean',
          defaultValue: true,
          options: [
            {
              value: true,
              title: 'Enable CSS source maps',
            },
            {
              value: false,
              title: 'Disable CSS source maps',
            },
          ],
        },
        {
          type: 'setting',
          category: 'Sources',
          title: 'Allow scrolling past end of file',
          settingName: 'allowScrollPastEof',
          settingType: 'boolean',
          defaultValue: true,
          options: [
            {
              value: true,
              title: 'Allow scrolling past end of file',
            },
            {
              value: false,
              title: 'Disallow scrolling past end of file',
            },
          ],
        },
        {
          type: 'action',
          category: 'Sources',
          actionId: 'sources.close-all',
          className: 'Sources.SourcesView.ActionDelegate',
          title: 'Close All',
        },
        {
          type: 'action',
          actionId: 'sources.jump-to-previous-location',
          category: 'Sources',
          title: 'Jump to previous editing location',
          className: 'Sources.SourcesView.ActionDelegate',
          contextTypes: ['Sources.SourcesView'],
          bindings: [
            {
              shortcut: 'Alt+Minus',
            },
          ],
        },
        {
          type: 'action',
          actionId: 'sources.jump-to-next-location',
          category: 'Sources',
          title: 'Jump to next editing location',
          className: 'Sources.SourcesView.ActionDelegate',
          contextTypes: ['Sources.SourcesView'],
          bindings: [
            {
              shortcut: 'Alt+Plus',
            },
          ],
        },
        {
          type: 'action',
          actionId: 'sources.close-editor-tab',
          category: 'Sources',
          title: 'Close the active tab',
          className: 'Sources.SourcesView.ActionDelegate',
          contextTypes: ['Sources.SourcesView'],
          bindings: [
            {
              shortcut: 'Alt+w',
            },
          ],
        },
        {
          type: 'action',
          actionId: 'sources.go-to-line',
          category: 'Sources',
          title: 'Go to line',
          className: 'Sources.SourcesView.ActionDelegate',
          contextTypes: ['Sources.SourcesView'],
          bindings: [
            {
              shortcut: 'Ctrl+g',
            },
          ],
        },
        {
          type: 'action',
          actionId: 'sources.go-to-member',
          category: 'Sources',
          title: 'Go to a function declaration/rule set',
          className: 'Sources.SourcesView.ActionDelegate',
          contextTypes: ['Sources.SourcesView'],
          bindings: [
            {
              platform: 'windows,linux',
              shortcut: 'Ctrl+Shift+o',
            },
            {
              platform: 'mac',
              shortcut: 'Meta+Shift+o',
            },
          ],
        },
        {
          type: 'action',
          actionId: 'debugger.toggle-breakpoint',
          category: 'Debugger',
          title: 'Toggle breakpoint',
          bindings: [
            {
              platform: 'windows,linux',
              shortcut: 'Ctrl+b',
            },
            {
              platform: 'mac',
              shortcut: 'Meta+b',
            },
          ],
        },
        {
          type: 'action',
          actionId: 'debugger.toggle-breakpoint-enabled',
          category: 'Debugger',
          title: 'Toggle breakpoint',
          bindings: [
            {
              platform: 'windows,linux',
              shortcut: 'Ctrl+Shift+b',
            },
            {
              platform: 'mac',
              shortcut: 'Meta+Shift+b',
            },
          ],
        },
        {
          type: 'action',
          actionId: 'debugger.breakpoint-input-window',
          category: 'Debugger',
          title: 'Toggle breakpoint input window',
          bindings: [
            {
              platform: 'windows,linux',
              shortcut: 'Ctrl+Alt+b',
            },
            {
              platform: 'mac',
              shortcut: 'Meta+Alt+b',
            },
          ],
        },
        {
          type: 'action',
          actionId: 'sources.save',
          category: 'Sources',
          title: 'Save',
          className: 'Sources.SourcesView.ActionDelegate',
          contextTypes: ['Sources.SourcesView'],
          bindings: [
            {
              platform: 'windows,linux',
              shortcut: 'Ctrl+s',
            },
            {
              platform: 'mac',
              shortcut: 'Meta+s',
            },
          ],
        },
        {
          type: 'action',
          actionId: 'sources.save-all',
          category: 'Sources',
          title: 'Save all',
          className: 'Sources.SourcesView.ActionDelegate',
          contextTypes: ['Sources.SourcesView'],
          bindings: [
            {
              platform: 'windows,linux',
              shortcut: 'Ctrl+Shift+s',
            },
            {
              platform: 'mac',
              shortcut: 'Meta+Alt+s',
            },
          ],
        },
        {
          type: 'action',
          category: 'Sources',
          actionId: 'sources.create-snippet',
          className: 'Sources.ActionDelegate',
          title: 'Create new snippet',
        },
        {
          type: 'action',
          category: 'Sources',
          actionId: 'sources.add-folder-to-workspace',
          className: 'Sources.ActionDelegate',
          iconClass: 'largeicon-add',
          title: 'Add folder to workspace',
          condition: '!sources.hide_add_folder',
        },
        {
          type: '@UI.ToolbarItem.Provider',
          actionId: 'sources.add-folder-to-workspace',
          location: 'files-navigator-toolbar',
          showLabel: true,
          condition: '!sources.hide_add_folder',
        },
        {
          type: '@UI.ViewLocationResolver',
          name: 'navigator-view',
          category: 'Sources',
          className: 'Sources.SourcesPanel',
        },
        {
          type: '@UI.ViewLocationResolver',
          name: 'sources.sidebar-top',
          category: 'Sources',
          className: 'Sources.SourcesPanel',
        },
        {
          type: '@UI.ViewLocationResolver',
          name: 'sources.sidebar-bottom',
          category: 'Sources',
          className: 'Sources.SourcesPanel',
        },
        {
          type: '@UI.ViewLocationResolver',
          name: 'sources.sidebar-tabs',
          category: 'Sources',
          className: 'Sources.SourcesPanel',
        },
        {
          type: 'view',
          id: 'sources.threads',
          title: 'Threads',
          persistence: 'permanent',
          className: 'Sources.ThreadsSidebarPane',
          condition: '!sources.hide_thread_sidebar',
        },
        {
          type: 'view',
          id: 'sources.sourceScopeChain',
          title: 'Source Scope',
          persistence: 'permanent',
          className: 'Sources.SourceScopeChainSidebarPane',
        },
        {
          type: 'view',
          id: 'sources.scopeChain',
          title: 'Scope',
          persistence: 'permanent',
          className: 'Sources.ScopeChainSidebarPane',
        },
        {
          type: 'view',
          id: 'sources.watch',
          title: 'Watch',
          hasToolbar: true,
          persistence: 'permanent',
          className: 'Sources.WatchExpressionsSidebarPane',
        },
        {
          type: 'view',
          id: 'sources.jsBreakpoints',
          title: 'Breakpoints',
          persistence: 'permanent',
          className: 'Sources.JavaScriptBreakpointsSidebarPane',
        },
        {
          type: '@UI.ContextFlavorListener',
          contextTypes: ['SDK.DebuggerPausedDetails'],
          className: 'Sources.JavaScriptBreakpointsSidebarPane',
        },
        {
          type: '@UI.ContextFlavorListener',
          contextTypes: ['SDK.DebuggerPausedDetails'],
          className: 'Sources.CallStackSidebarPane',
        },
        {
          type: '@UI.ContextFlavorListener',
          contextTypes: ['SDK.DebuggerModel.CallFrame'],
          className: 'Sources.SourceScopeChainSidebarPane',
        },
        {
          type: '@UI.ContextFlavorListener',
          contextTypes: ['SDK.DebuggerModel.CallFrame'],
          className: 'Sources.ScopeChainSidebarPane',
        },
        {
          type: 'action',
          category: 'Debugger',
          actionId: 'debugger.previous-call-frame',
          className: 'Sources.CallStackSidebarPane.ActionDelegate',
          title: 'Previous call frame',
          contextTypes: ['SDK.DebuggerPausedDetails'],
          bindings: [
            {
              shortcut: 'Ctrl+,',
            },
          ],
        },
        {
          type: 'action',
          category: 'Debugger',
          actionId: 'debugger.next-call-frame',
          className: 'Sources.CallStackSidebarPane.ActionDelegate',
          title: 'Next call frame',
          contextTypes: ['SDK.DebuggerPausedDetails'],
          bindings: [
            {
              shortcut: 'Ctrl+.',
            },
          ],
        },
      ],
      dependencies: [
        'components',
        'search',
        'source_frame',
        'snippets',
        'extensions',
        'persistence',
        'quick_open',
        'inline_editor',
        'color_picker',
        'event_listeners',
        'object_ui',
        'formatter',
        'coverage',
      ],
      scripts: [],
      modules: [
        'sources.js',
        'sources-legacy.js',
        'AddSourceMapURLDialog.js',
        'BreakpointEditDialog.js',
        'CallStackSidebarPane.js',
        'DebuggerPausedMessage.js',
        'SimpleHistoryManager.js',
        'EditingLocationHistoryManager.js',
        'FilePathScoreFunction.js',
        'FilteredUISourceCodeListProvider.js',
        'GoToLineQuickOpen.js',
        'SourceMapNamesResolver.js',
        'JavaScriptBreakpointsSidebarPane.js',
        'UISourceCodeFrame.js',
        'Plugin.js',
        'DebuggerPlugin.js',
        'CoveragePlugin.js',
        'CSSPlugin.js',
        'GutterDiffPlugin.js',
        'SearchSourcesView.js',
        'NavigatorView.js',
        'ScopeChainSidebarPane.js',
        'SourcesNavigator.js',
        'OutlineQuickOpen.js',
        'TabbedEditorContainer.js',
        'WatchExpressionsSidebarPane.js',
        'ThreadsSidebarPane.js',
        'ScriptFormatterEditorAction.js',
        'InplaceFormatterEditorAction.js',
        'OpenFileQuickOpen.js',
        'SourcesView.js',
        'SourcesSearchScope.js',
        'SourcesPanel.js',
        'JavaScriptCompilerPlugin.js',
        'SnippetsPlugin.js',
        'ScriptOriginPlugin.js',
      ],
      resources: [
        'breakpointEditDialog.css',
        'callStackSidebarPane.css',
        'debuggerPausedMessage.css',
        'javaScriptBreakpointsSidebarPane.css',
        'navigatorTree.css',
        'navigatorView.css',
        'scopeChainSidebarPane.css',
        'sourcesPanel.css',
        'sourcesView.css',
        'threadsSidebarPane.css',
        'watchExpressionsSidebarPane.css',
        'dialog.css',
      ],
    },
    {
      name: 'profiler',
      extensions: [
        {
          type: 'view',
          location: 'drawer-view',
          id: 'live_heap_profile',
          title: 'Live Heap Profile',
          persistence: 'closeable',
          className: 'Profiler.LiveHeapProfileView',
          order: 100,
          experiment: 'liveHeapProfile',
        },
        {
          type: '@UI.ContextMenu.Provider',
          contextTypes: ['SDK.RemoteObject'],
          className: 'Profiler.HeapProfilerPanel',
        },
        {
          type: 'setting',
          category: 'Performance',
          title: 'High resolution CPU profiling',
          settingName: 'highResolutionCpuProfiling',
          settingType: 'boolean',
          defaultValue: true,
        },
        {
          type: 'setting',
          category: 'Performance',
          title: 'Show native functions in JS Profile',
          settingName: 'showNativeFunctionsInJSProfile',
          settingType: 'boolean',
          defaultValue: true,
        },
        {
          type: 'action',
          actionId: 'live-heap-profile.toggle-recording',
          iconClass: 'largeicon-start-recording',
          toggleable: true,
          toggledIconClass: 'largeicon-stop-recording',
          toggleWithRedColor: true,
          className: 'Profiler.LiveHeapProfileView.ActionDelegate',
          category: 'Memory',
          experiment: 'liveHeapProfile',
          options: [
            {
              value: true,
              title: 'Start recording heap allocations',
            },
            {
              value: false,
              title: 'Stop recording heap allocations',
            },
          ],
        },
        {
          type: 'action',
          actionId: 'live-heap-profile.start-with-reload',
          iconClass: 'largeicon-refresh',
          className: 'Profiler.LiveHeapProfileView.ActionDelegate',
          category: 'Memory',
          experiment: 'liveHeapProfile',
          title: 'Start recording heap allocations and reload the page',
        },
        {
          type: 'action',
          actionId: 'profiler.heap-toggle-recording',
          category: 'Memory',
          iconClass: 'largeicon-start-recording',
          title: 'Start/stop recording',
          toggleable: true,
          toggledIconClass: 'largeicon-stop-recording',
          toggleWithRedColor: true,
          contextTypes: ['Profiler.HeapProfilerPanel'],
          className: 'Profiler.HeapProfilerPanel',
          bindings: [
            {
              platform: 'windows,linux',
              shortcut: 'Ctrl+E',
            },
            {
              platform: 'mac',
              shortcut: 'Meta+E',
            },
          ],
        },
        {
          type: 'action',
          actionId: 'profiler.js-toggle-recording',
          category: 'JavaScript Profiler',
          title: 'Start/stop recording',
          iconClass: 'largeicon-start-recording',
          toggleable: true,
          toggledIconClass: 'largeicon-stop-recording',
          toggleWithRedColor: true,
          contextTypes: ['Profiler.JSProfilerPanel'],
          className: 'Profiler.JSProfilerPanel',
          bindings: [
            {
              platform: 'windows,linux',
              shortcut: 'Ctrl+E',
            },
            {
              platform: 'mac',
              shortcut: 'Meta+E',
            },
          ],
        },
      ],
      dependencies: ['components', 'perf_ui', 'data_grid', 'heap_snapshot_model', 'object_ui'],
      scripts: [],
      modules: [
        'profiler.js',
        'profiler-legacy.js',
        'ProfileHeader.js',
        'ProfilesPanel.js',
        'ProfileView.js',
        'ProfileDataGrid.js',
        'ProfileSidebarTreeElement.js',
        'BottomUpProfileDataGrid.js',
        'TopDownProfileDataGrid.js',
        'ChildrenProvider.js',
        'CPUProfileFlameChart.js',
        'CPUProfileView.js',
        'HeapProfileView.js',
        'HeapProfilerPanel.js',
        'HeapSnapshotProxy.js',
        'HeapSnapshotDataGrids.js',
        'HeapSnapshotGridNodes.js',
        'HeapSnapshotView.js',
        'HeapTimelineOverview.js',
        'IsolateSelector.js',
        'LiveHeapProfileView.js',
        'ProfileLauncherView.js',
        'ProfileTypeRegistry.js',
      ],
      resources: [
        'heapProfiler.css',
        'liveHeapProfile.css',
        'profileLauncherView.css',
        'profilesPanel.css',
        'profilesSidebarTree.css',
      ],
    },
    {
      name: 'coverage',
      extensions: [
        {
          type: '@SourceFrame.LineDecorator',
          className: 'Coverage.CoverageView.LineDecorator',
          decoratorType: 'coverage',
        },
        {
          type: 'action',
          actionId: 'coverage.toggle-recording',
          iconClass: 'largeicon-start-recording',
          toggleable: true,
          toggledIconClass: 'largeicon-stop-recording',
          toggleWithRedColor: true,
          className: 'Coverage.CoverageView.ActionDelegate',
          category: 'Performance',
          options: [
            {
              value: true,
              title: 'Instrument coverage',
            },
            {
              value: false,
              title: 'Stop instrumenting coverage and show results',
            },
          ],
        },
        {
          type: 'action',
          actionId: 'coverage.start-with-reload',
          iconClass: 'largeicon-refresh',
          className: 'Coverage.CoverageView.ActionDelegate',
          category: 'Performance',
          title: 'Start instrumenting coverage and reload page',
        },
      ],
      dependencies: ['sdk', 'ui', 'source_frame', 'data_grid', 'formatter'],
      scripts: [],
      modules: [
        'coverage.js',
        'coverage-legacy.js',
        'CoverageModel.js',
        'CoverageListView.js',
        'CoverageView.js',
        'CoverageDecorationManager.js',
      ],
      resources: ['coverageListView.css', 'coverageView.css'],
    },
    {
      name: 'quick_open',
      extensions: [
        {
          type: '@QuickOpen.FilteredListWidget.Provider',
          title: 'Run command',
          prefix: '>',
          className: 'QuickOpen.CommandMenuProvider',
        },
        {
          type: '@QuickOpen.FilteredListWidget.Provider',
          prefix: '?',
          className: 'QuickOpen.HelpQuickOpen',
        },
      ],
      dependencies: ['ui', 'diff'],
      scripts: [],
      modules: [
        'quick_open.js',
        'quick_open-legacy.js',
        'FilteredListWidget.js',
        'QuickOpen.js',
        'CommandMenu.js',
        'HelpQuickOpen.js',
      ],
      resources: ['filteredListWidget.css'],
    },
  ]
);

startApplication('chii_app');
